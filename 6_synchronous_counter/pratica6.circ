<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7">
    <tool name="TclGeneric">
      <a name="content">--------------------------------------------------------------------------------&#13;
-- HEIG-VD, institute REDS, 1400 Yverdon-les-Bains&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
library ieee;&#13;
  use ieee.std_logic_1164.all;&#13;
  --use ieee.numeric_std.all;&#13;
&#13;
entity VHDL_Component is&#13;
  port(&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert input ports below&#13;
    horloge_i  : in  std_logic;                    -- input bit example&#13;
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert output ports below&#13;
    max_o      : out std_logic;                    -- output bit example&#13;
    cpt_o      : out std_logic_vector(3 downto 0)  -- output vector example&#13;
    );&#13;
end VHDL_Component;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
architecture type_architecture of VHDL_Component is&#13;
&#13;
&#13;
begin&#13;
&#13;
&#13;
end type_architecture;&#13;
</a>
    </tool>
  </lib>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="circuito1"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="circuito1">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="circuito1"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="32.0"/>
    <comp lib="0" loc="(110,110)" name="Clock"/>
    <comp lib="0" loc="(110,200)" name="Pin">
      <a name="appearance" val="classic"/>
    </comp>
    <comp lib="0" loc="(440,230)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(440,260)" name="Splitter">
      <a name="facing" val="south"/>
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(440,90)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(450,130)" name="Splitter">
      <a name="facing" val="south"/>
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="1" loc="(170,130)" name="NOT Gate"/>
    <comp lib="1" loc="(170,150)" name="NOT Gate"/>
    <comp lib="1" loc="(170,170)" name="NOT Gate"/>
    <comp lib="5" loc="(110,140)" name="Button"/>
    <comp lib="5" loc="(110,170)" name="Button"/>
    <comp lib="5" loc="(590,90)" name="7-Segment Display">
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(640,90)" name="7-Segment Display">
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(390,110)" name="cronometro">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(110,110)" to="(170,110)"/>
    <wire from="(110,140)" to="(120,140)"/>
    <wire from="(110,170)" to="(120,170)"/>
    <wire from="(110,200)" to="(130,200)"/>
    <wire from="(120,130)" to="(120,140)"/>
    <wire from="(120,130)" to="(140,130)"/>
    <wire from="(120,150)" to="(120,170)"/>
    <wire from="(120,150)" to="(140,150)"/>
    <wire from="(130,170)" to="(130,200)"/>
    <wire from="(130,170)" to="(140,170)"/>
    <wire from="(390,110)" to="(430,110)"/>
    <wire from="(390,130)" to="(400,130)"/>
    <wire from="(400,130)" to="(400,230)"/>
    <wire from="(400,230)" to="(400,260)"/>
    <wire from="(400,230)" to="(440,230)"/>
    <wire from="(400,260)" to="(440,260)"/>
    <wire from="(430,110)" to="(430,130)"/>
    <wire from="(430,130)" to="(450,130)"/>
    <wire from="(430,90)" to="(430,110)"/>
    <wire from="(430,90)" to="(440,90)"/>
    <wire from="(450,280)" to="(450,300)"/>
    <wire from="(450,300)" to="(690,300)"/>
    <wire from="(460,150)" to="(460,160)"/>
    <wire from="(460,160)" to="(540,160)"/>
    <wire from="(460,280)" to="(460,310)"/>
    <wire from="(460,310)" to="(700,310)"/>
    <wire from="(470,150)" to="(470,170)"/>
    <wire from="(470,170)" to="(550,170)"/>
    <wire from="(470,280)" to="(470,320)"/>
    <wire from="(470,320)" to="(660,320)"/>
    <wire from="(480,150)" to="(480,180)"/>
    <wire from="(480,180)" to="(610,180)"/>
    <wire from="(480,280)" to="(480,330)"/>
    <wire from="(480,330)" to="(650,330)"/>
    <wire from="(490,150)" to="(490,190)"/>
    <wire from="(490,190)" to="(600,190)"/>
    <wire from="(490,280)" to="(490,340)"/>
    <wire from="(490,340)" to="(640,340)"/>
    <wire from="(500,150)" to="(500,200)"/>
    <wire from="(500,200)" to="(590,200)"/>
    <wire from="(500,280)" to="(500,350)"/>
    <wire from="(500,350)" to="(710,350)"/>
    <wire from="(510,150)" to="(510,210)"/>
    <wire from="(510,210)" to="(560,210)"/>
    <wire from="(510,280)" to="(510,360)"/>
    <wire from="(510,360)" to="(720,360)"/>
    <wire from="(520,150)" to="(520,220)"/>
    <wire from="(520,220)" to="(570,220)"/>
    <wire from="(540,50)" to="(540,160)"/>
    <wire from="(540,50)" to="(610,50)"/>
    <wire from="(550,60)" to="(550,170)"/>
    <wire from="(550,60)" to="(620,60)"/>
    <wire from="(560,70)" to="(560,210)"/>
    <wire from="(560,70)" to="(600,70)"/>
    <wire from="(570,80)" to="(570,220)"/>
    <wire from="(570,80)" to="(590,80)"/>
    <wire from="(590,150)" to="(590,200)"/>
    <wire from="(590,80)" to="(590,90)"/>
    <wire from="(600,150)" to="(600,190)"/>
    <wire from="(600,70)" to="(600,90)"/>
    <wire from="(610,150)" to="(610,180)"/>
    <wire from="(610,50)" to="(610,90)"/>
    <wire from="(620,60)" to="(620,90)"/>
    <wire from="(640,150)" to="(640,340)"/>
    <wire from="(640,50)" to="(640,90)"/>
    <wire from="(640,50)" to="(720,50)"/>
    <wire from="(650,150)" to="(650,330)"/>
    <wire from="(650,60)" to="(650,90)"/>
    <wire from="(650,60)" to="(710,60)"/>
    <wire from="(660,150)" to="(660,320)"/>
    <wire from="(660,80)" to="(660,90)"/>
    <wire from="(660,80)" to="(690,80)"/>
    <wire from="(670,70)" to="(670,90)"/>
    <wire from="(670,70)" to="(700,70)"/>
    <wire from="(690,80)" to="(690,300)"/>
    <wire from="(700,70)" to="(700,310)"/>
    <wire from="(710,60)" to="(710,350)"/>
    <wire from="(720,50)" to="(720,360)"/>
  </circuit>
  <circuit name="circuito2">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="circuito2"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="4.0"/>
    <comp lib="0" loc="(410,170)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(410,310)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(410,340)" name="Splitter">
      <a name="facing" val="south"/>
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(420,210)" name="Splitter">
      <a name="facing" val="south"/>
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(80,190)" name="Clock"/>
    <comp lib="1" loc="(140,210)" name="NOT Gate"/>
    <comp lib="5" loc="(560,170)" name="7-Segment Display">
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(610,170)" name="7-Segment Display">
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(80,220)" name="Button"/>
    <comp loc="(360,190)" name="sequencia">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(360,190)" to="(400,190)"/>
    <wire from="(360,210)" to="(370,210)"/>
    <wire from="(370,210)" to="(370,310)"/>
    <wire from="(370,310)" to="(370,340)"/>
    <wire from="(370,310)" to="(410,310)"/>
    <wire from="(370,340)" to="(410,340)"/>
    <wire from="(400,170)" to="(400,190)"/>
    <wire from="(400,170)" to="(410,170)"/>
    <wire from="(400,190)" to="(400,210)"/>
    <wire from="(400,210)" to="(420,210)"/>
    <wire from="(420,360)" to="(420,380)"/>
    <wire from="(420,380)" to="(660,380)"/>
    <wire from="(430,230)" to="(430,240)"/>
    <wire from="(430,240)" to="(510,240)"/>
    <wire from="(430,360)" to="(430,390)"/>
    <wire from="(430,390)" to="(670,390)"/>
    <wire from="(440,230)" to="(440,250)"/>
    <wire from="(440,250)" to="(520,250)"/>
    <wire from="(440,360)" to="(440,400)"/>
    <wire from="(440,400)" to="(630,400)"/>
    <wire from="(450,230)" to="(450,260)"/>
    <wire from="(450,260)" to="(580,260)"/>
    <wire from="(450,360)" to="(450,410)"/>
    <wire from="(450,410)" to="(620,410)"/>
    <wire from="(460,230)" to="(460,270)"/>
    <wire from="(460,270)" to="(570,270)"/>
    <wire from="(460,360)" to="(460,420)"/>
    <wire from="(460,420)" to="(610,420)"/>
    <wire from="(470,230)" to="(470,280)"/>
    <wire from="(470,280)" to="(560,280)"/>
    <wire from="(470,360)" to="(470,430)"/>
    <wire from="(470,430)" to="(680,430)"/>
    <wire from="(480,230)" to="(480,290)"/>
    <wire from="(480,290)" to="(530,290)"/>
    <wire from="(480,360)" to="(480,440)"/>
    <wire from="(480,440)" to="(690,440)"/>
    <wire from="(490,230)" to="(490,300)"/>
    <wire from="(490,300)" to="(540,300)"/>
    <wire from="(510,130)" to="(510,240)"/>
    <wire from="(510,130)" to="(580,130)"/>
    <wire from="(520,140)" to="(520,250)"/>
    <wire from="(520,140)" to="(590,140)"/>
    <wire from="(530,150)" to="(530,290)"/>
    <wire from="(530,150)" to="(570,150)"/>
    <wire from="(540,160)" to="(540,300)"/>
    <wire from="(540,160)" to="(560,160)"/>
    <wire from="(560,160)" to="(560,170)"/>
    <wire from="(560,230)" to="(560,280)"/>
    <wire from="(570,150)" to="(570,170)"/>
    <wire from="(570,230)" to="(570,270)"/>
    <wire from="(580,130)" to="(580,170)"/>
    <wire from="(580,230)" to="(580,260)"/>
    <wire from="(590,140)" to="(590,170)"/>
    <wire from="(610,130)" to="(610,170)"/>
    <wire from="(610,130)" to="(690,130)"/>
    <wire from="(610,230)" to="(610,420)"/>
    <wire from="(620,140)" to="(620,170)"/>
    <wire from="(620,140)" to="(680,140)"/>
    <wire from="(620,230)" to="(620,410)"/>
    <wire from="(630,160)" to="(630,170)"/>
    <wire from="(630,160)" to="(660,160)"/>
    <wire from="(630,230)" to="(630,400)"/>
    <wire from="(640,150)" to="(640,170)"/>
    <wire from="(640,150)" to="(670,150)"/>
    <wire from="(660,160)" to="(660,380)"/>
    <wire from="(670,150)" to="(670,390)"/>
    <wire from="(680,140)" to="(680,430)"/>
    <wire from="(690,130)" to="(690,440)"/>
    <wire from="(80,190)" to="(140,190)"/>
    <wire from="(80,220)" to="(90,220)"/>
    <wire from="(90,210)" to="(110,210)"/>
    <wire from="(90,210)" to="(90,220)"/>
  </circuit>
  <vhdl name="cronometro">library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity cronometro is
    Port( 
        clk : in STD_LOGIC;
        start_stop : in STD_LOGIC;
        ud : in STD_LOGIC;
        z : in STD_LOGIC;
        dezena : out STD_LOGIC_VECTOR(6 downto 0);
        unidade : out STD_LOGIC_VECTOR(6 downto 0)
    );
end cronometro;

architecture cronometro_arch of cronometro is
    signal contagem : INTEGER range 0 to 59 := 0;
    signal start_stop_ff : STD_LOGIC := '1'; -- 0=off, 1=on
    signal ud_ff : STD_LOGIC := '0'; -- 0=up, 1=down

    function DISPLAY(num : INTEGER) return STD_LOGIC_VECTOR is
    begin
        case num is
            when 0 =&gt; return "1111110";
            when 1 =&gt; return "0110000";
            when 2 =&gt; return "1101101";
            when 3 =&gt; return "1111001";
            when 4 =&gt; return "0110011";
            when 5 =&gt; return "1011011";
            when 6 =&gt; return "1011111";
            when 7 =&gt; return "1110000";
            when 8 =&gt; return "1111111";
            when 9 =&gt; return "1110011";
            when others =&gt; return "0000000";
        end case;
    end DISPLAY;

begin
    process (clk, z, ud, start_stop)
    begin
        if (z = '0' and rising_edge(ud)) then
            ud_ff &lt;= ud_ff XOR '1';
        end if;
        if (rising_edge(start_stop)) then
            start_stop_ff &lt;= start_stop_ff XOR '1';
        end if;
        if (rising_edge(z)) then
            if(ud_ff = '0') then
                contagem &lt;= 0;
            else
                contagem &lt;= 59;
            end if;
        end if;
        if (rising_edge(clk) and start_stop_ff = '1') then
            if (ud_ff = '0') then
                if (contagem = 59) then
                    contagem &lt;= 0;
                else
                    contagem &lt;= contagem + 1;
                end if;
            else
                if (contagem = 0) then
                    contagem &lt;= 59;
                else
                    contagem &lt;= contagem - 1;
                end if;
            end if;
        end if;
    end process;
    dezena &lt;= DISPLAY(contagem/10);
    unidade &lt;= DISPLAY(contagem mod 10);
end cronometro_arch;
</vhdl>
  <vhdl name="sequencia">library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity sequencia is
    Port( 
        clk : in STD_LOGIC;
        start : in STD_LOGIC;
        msd : out STD_LOGIC_VECTOR(6 downto 0);
        lsd : out STD_LOGIC_VECTOR(6 downto 0)
    );
end sequencia;

architecture sequencia_arch of sequencia is
    signal contagem_lsd : INTEGER range 0 to 8 := 0;
    signal contagem_msd : STD_LOGIC := '0';
    signal ud_lsd : STD_LOGIC := '0'; -- 0=up, 1=down
    signal start_signal : STD_LOGIC := '0'; -- 0=off, 1=on

    function DISPLAY_LSD(num : integer) return STD_LOGIC_VECTOR is
    begin
        case num is
        	when 0 =&gt; return "0000001"; -- simbolo "-"
            when 1 =&gt; return "1101101"; -- numero 2
            when 2 =&gt; return "1011011"; -- numero 5
            when 3 =&gt; return "0110000"; -- numero 1
            when 4 =&gt; return "1011111"; -- numero 6
            when 5 =&gt; return "1110011"; -- numero 9
            when 6 =&gt; return "1110000"; -- numero 7
            when 7 =&gt; return "1110000"; -- numero 7
            when 8 =&gt; return "0000001"; -- simbolo "-"
            when others =&gt; return "0000001";
        end case;
    end DISPLAY_LSD;

    function DISPLAY_MSD(num2 : STD_LOGIC) return STD_LOGIC_VECTOR is
    begin
        case num2 is
            when '0' =&gt; return "0000000";
            when '1' =&gt; return "0111100"; -- letra J
            when others =&gt; return "0000000";
        end case;
    end DISPLAY_MSD;

begin
	process (clk, start)
	begin
	    if rising_edge(start) then
	        start_signal &lt;= start_signal XOR '1';
	    end if;
	    if rising_edge(clk) then
	        if start_signal = '1' then
	        	  contagem_msd &lt;= contagem_msd XOR '1';
	            if (ud_lsd = '0') then
	                if (contagem_lsd &lt; 8) then
	                    contagem_lsd &lt;= contagem_lsd + 1;
	                else
	                    contagem_lsd &lt;= 7;
	                    ud_lsd &lt;= '1';
	                end if;
	            elsif (ud_lsd = '1') then
	                if (contagem_lsd &gt; 0) then
	                    contagem_lsd &lt;= contagem_lsd - 1;
	                else
	                    start_signal &lt;= '0';
	                    ud_lsd &lt;= '0';
	                    contagem_msd &lt;= '0';
	                end if;
	            end if;
	        end if;
	    end if;
	end process;
     msd &lt;= DISPLAY_MSD(contagem_msd);
     lsd &lt;= DISPLAY_LSD(contagem_lsd);
end sequencia_arch;</vhdl>
</project>
