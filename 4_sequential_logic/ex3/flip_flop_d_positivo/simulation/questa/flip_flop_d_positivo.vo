// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 23.1std.0 Build 991 11/28/2023 SC Lite Edition"

// DATE "05/02/2024 03:58:06"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module flip_flop_d_positivo (
	d,
	clk,
	q,
	qn);
input 	d;
input 	clk;
output 	q;
output 	qn;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \d~combout ;
wire \s1~regout ;
wire \q~reg0_regout ;


// Location: PIN_53,	 I/O Standard: 3.3V Schmitt Trigger Input,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_50,	 I/O Standard: 3.3V Schmitt Trigger Input,	 Current Strength: Default
maxii_io \d~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\d~combout ),
	.padio(d));
// synopsys translate_off
defparam \d~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X5_Y1_N4
maxii_lcell s1(
// Equation(s):
// \s1~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , , \d~combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\d~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s1~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam s1.lut_mask = "0000";
defparam s1.operation_mode = "normal";
defparam s1.output_mode = "reg_only";
defparam s1.register_cascade_mode = "off";
defparam s1.sum_lutc_input = "datac";
defparam s1.synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N6
maxii_lcell \q~reg0 (
// Equation(s):
// \q~reg0_regout  = DFFEAS(GND, !GLOBAL(\clk~combout ), VCC, , , \s1~regout , , , VCC)

	.clk(!\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\s1~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\q~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \q~reg0 .lut_mask = "0000";
defparam \q~reg0 .operation_mode = "normal";
defparam \q~reg0 .output_mode = "reg_only";
defparam \q~reg0 .register_cascade_mode = "off";
defparam \q~reg0 .sum_lutc_input = "datac";
defparam \q~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: PIN_49,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \q~I (
	.datain(\q~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(q));
// synopsys translate_off
defparam \q~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_48,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \qn~I (
	.datain(!\s1~regout ),
	.oe(vcc),
	.combout(),
	.padio(qn));
// synopsys translate_off
defparam \qn~I .operation_mode = "output";
// synopsys translate_on

endmodule
